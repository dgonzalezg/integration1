{"version":3,"file":"static/webpack/static/development/pages/episode/[eid].js.45aec3cb2bdcaa9a14fe.hot-update.js","sources":["webpack:///./pages/episode/[eid].js"],"sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Episode = props => (\n  <Layout>\n    <h1>{props.episode.name}</h1>\n<p>Release date: {props.episode.air_date}</p>\n    <p>Episdode Code: {props.episode.episode}</p>\n    <h2> Characters in this episode</h2>\n    {props.characters.map(character => (\n        <li key={character.id}>\n          <Link href=\"/character/[cid]\" as={`/character/${character.id}`}>\n            <a>{character.name}</a>\n          </Link>\n        </li>\n      ))}\n       <style jsx>{`\n  h1,\n  a {\n    font-family: 'Arial';\n  }\n\n  ul {\n    padding: 0;\n  }\n\n  li {\n    list-style: none;\n    margin: 5px 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: blue;\n  }\n\n  a:hover {\n    opacity: 0.6;\n  }\n`}</style>\n  </Layout>\n);\n\nEpisode.getInitialProps = async function(context) {\n  const { eid } = context.query;\n\n  const res = await fetch(`https://rickandmortyapi.com/api/episode/${eid}`).then(\n    (response) => {\n      return response.json();\n    }\n  )\n  const cids = [];\n  for (let i = 0; i < res.characters.length; i++) {\n    const character = res.characters[i].split('/');\n    const id = character[character.length-1]\n    cids.push(id);\n  };\n  const characters_arr = await fetch(`https://rickandmortyapi.com/api/character/${cids}`).then(\n    (response) => {\n      return response.json();\n    })\n\n\n  return { episode: res, characters: characters_arr };\n};\n\nexport default Episode;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AALA;AAAA;AAAA;AADA;AACA;AAuCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAKA;AACA;AACA;AAPA;AAGA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAbA;AAAA;AAgBA;AACA;AACA;AAlBA;AAcA;AAdA;AAoBA;AAAA;AAAA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAsBA;;;;A","sourceRoot":""}