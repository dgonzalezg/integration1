{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nvar Character = function Character(props) {\n  return __jsx(Layout, null, __jsx(\"h1\", null, props.character.name), props.character.image ? __jsx(\"img\", {\n    src: props.character.image\n  }) : null, __jsx(\"p\", null, \"Status: \", props.character.status), __jsx(\"p\", null, \"Specie: \", props.character.species), __jsx(\"p\", null, props.character.type ? \"Type: \".concat(props.character.type) : null), __jsx(\"p\", null, \"Gender: \", props.character.gender), __jsx(\"p\", null, \"Origin: \", props.character.origin.url ? __jsx(Link, {\n    href: \"/location/[lid]\",\n    as: \"/location/\".concat(props.origin.id)\n  }, __jsx(\"a\", null, props.character.origin.name)) : 'unkown'), __jsx(\"p\", null, \"Location: \", props.character.location.url ? __jsx(Link, {\n    href: \"/location/[lid]\",\n    as: \"/location/\".concat(props.location.id)\n  }, __jsx(\"a\", null, props.character.location.name)) : 'unkown'), __jsx(\"h2\", null, \"Episodes\"), props.episodes.map(function (episode) {\n    return __jsx(\"li\", {\n      key: episode.id\n    }, __jsx(Link, {\n      href: \"/episode/[eid]\",\n      as: \"/episode/\".concat(episode.id)\n    }, __jsx(\"a\", null, episode.name)));\n  }));\n};\n\nCharacter.getInitialProps = function _callee(context) {\n  var cid, res, origin_res, location_res, eids, i, episode, episodes_arr;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          cid = context.query.cid;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://rickandmortyapi.com/api/character/\".concat(cid)).then(function (response) {\n            return response.json();\n          }));\n\n        case 3:\n          res = _context.sent;\n          origin_res = null;\n\n          if (!res.origin.url) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(fetch(res.origin.url).then(function (response) {\n            return response.json();\n          }));\n\n        case 8:\n          origin_res = _context.sent;\n\n        case 9:\n          location_res = null;\n\n          if (!res.location.url) {\n            _context.next = 14;\n            break;\n          }\n\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(fetch(res.location.url).then(function (response) {\n            return response.json();\n          }));\n\n        case 13:\n          location_res = _context.sent;\n\n        case 14:\n          eids = [];\n\n          for (i = 0; i < res.episode.length; i++) {\n            episode = res.episode[i].split('/');\n            eids.push(episode[episode.length - 1]);\n          }\n\n          ;\n          _context.next = 19;\n          return _regeneratorRuntime.awrap(fetch(\"https://rickandmortyapi.com/api/episode/\".concat(eids)).then(function (response) {\n            return response.json();\n          }));\n\n        case 19:\n          episodes_arr = _context.sent;\n\n          if (eids.length == 1) {\n            episodes_arr = [episodes_arr];\n          }\n\n          return _context.abrupt(\"return\", {\n            character: res,\n            episodes: episodes_arr,\n            origin: origin_res,\n            location: location_res\n          });\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Character;","map":null,"metadata":{},"sourceType":"module"}