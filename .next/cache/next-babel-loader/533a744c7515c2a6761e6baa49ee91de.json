{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, __jsx(\"h1\", {\n  className: \"jsx-3162169367\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, \"Rick and Morty Episodes\"), __jsx(\"ul\", {\n  className: \"jsx-3162169367\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, props.episodes.map(episode => __jsx(\"li\", {\n  key: episode.id,\n  className: \"jsx-3162169367\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/episode/[eid]\",\n  as: `/episode/${episode.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  className: \"jsx-3162169367\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }\n}, episode.name)), __jsx(\"p\", {\n  className: \"jsx-3162169367\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, \"Release Date: \", episode.air_date)))), __jsx(_JSXStyle, {\n  id: \"3162169367\",\n  __self: this\n}, \"h1.jsx-3162169367,a.jsx-3162169367{font-family:'Arial';}ul.jsx-3162169367{padding:0;}li.jsx-3162169367{list-style:none;margin:5px 0;display:inline-block;}a.jsx-3162169367{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-3162169367:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kaWVnby9Hb29nbGUgRHJpdmUvUFVDLzIwMjAvVGFsbGVyIGRlIEludGVncmFjaW9uL1RhcmVhL1QxL2ludGVncmF0aW9uMS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQmdCLEFBSXlCLEFBSVYsQUFJTSxBQU1LLEFBS1QsVUFkZCxFQWVBLElBWGUsSUFSZixTQVN1QixxQkFDdkIsQUFJYSxXQUNiIiwiZmlsZSI6Ii9Vc2Vycy9kaWVnby9Hb29nbGUgRHJpdmUvUFVDLzIwMjAvVGFsbGVyIGRlIEludGVncmFjaW9uL1RhcmVhL1QxL2ludGVncmF0aW9uMS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9NeUxheW91dCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbmNvbnN0IEluZGV4ID0gcHJvcHMgPT4gKFxuICA8TGF5b3V0PlxuICAgIDxoMT5SaWNrIGFuZCBNb3J0eSBFcGlzb2RlczwvaDE+XG4gICAgPHVsPlxuICAgICAge3Byb3BzLmVwaXNvZGVzLm1hcChlcGlzb2RlID0+IChcbiAgICAgICAgPGxpIGtleT17ZXBpc29kZS5pZH0+XG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9lcGlzb2RlL1tlaWRdXCIgYXM9e2AvZXBpc29kZS8ke2VwaXNvZGUuaWR9YH0+XG4gICAgICAgICAgICA8YT57ZXBpc29kZS5uYW1lfTwvYT5cbiAgICAgICAgICA8L0xpbms+XG4gICAgICA8cD5SZWxlYXNlIERhdGU6IHtlcGlzb2RlLmFpcl9kYXRlfTwvcD5cbiAgICAgICAgPC9saT5cbiAgICAgICkpfVxuICAgIDwvdWw+XG4gICAgPHN0eWxlIGpzeD57YFxuICBoMSxcbiAgYSB7XG4gICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XG4gIH1cblxuICB1bCB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuXG4gIGxpIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogNXB4IDA7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG5cbiAgYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiBibHVlO1xuICB9XG5cbiAgYTpob3ZlciB7XG4gICAgb3BhY2l0eTogMC42O1xuICB9XG5gfTwvc3R5bGU+XG4gIDwvTGF5b3V0PlxuKTtcblxuSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKSB7XG4gXG4gY29uc3QgZWlkcyA9IEFycmF5LmZyb20oQXJyYXkoMzEpLmtleXMoKSk7XG4gIGNvbnN0IG5laWRzID0gZWlkcy5tYXAoaSA9PiB7XG4gICAgIHJldHVybiBpKzE7XG4gICB9KTtcbiAgIGNvbnN0IGVyZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwczovL3JpY2thbmRtb3J0eWFwaS5jb20vYXBpL2VwaXNvZGUvJHtuZWlkc31gKS50aGVuKFxuICAgICAocmVzcG9uc2UpID0+IHtcbiAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgICB9XG4gICApXG4gIFxuICBcbiAgcmV0dXJuIHtcbiAgICBlcGlzb2RlczogZXJlc3BvbnNlXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBJbmRleDsiXX0= */\\n/*@ sourceURL=/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js */\"));\n\nIndex.getInitialProps = async function () {\n  const eids = Array.from(Array(31).keys());\n  const neids = eids.map(i => {\n    return i + 1;\n  });\n  const eresponse = await fetch(`https://rickandmortyapi.com/api/episode/${neids}`).then(response => {\n    return response.json();\n  });\n  return {\n    episodes: eresponse\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js"],"names":["Layout","Link","fetch","Index","props","episodes","map","episode","id","name","air_date","getInitialProps","eids","Array","from","keys","neids","i","eresponse","then","response","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IACzB;AAAI,EAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,gBAAX;AAA4B,EAAA,EAAE,EAAG,YAAWD,OAAO,CAACC,EAAG,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,OAAO,CAACE,IAAZ,CADF,CADF,EAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBF,OAAO,CAACG,QAA1B,CAJE,CADD,CADH,CAFF;AAAA;AAAA;AAAA,y8EADF;;AAyCAP,KAAK,CAACQ,eAAN,GAAwB,kBAAiB;AAExC,QAAMC,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,CAAb;AACC,QAAMC,KAAK,GAAGJ,IAAI,CAACN,GAAL,CAASW,CAAC,IAAI;AACzB,WAAOA,CAAC,GAAC,CAAT;AACD,GAFY,CAAd;AAGC,QAAMC,SAAS,GAAG,MAAMhB,KAAK,CAAE,2CAA0Cc,KAAM,EAAlD,CAAL,CAA0DG,IAA1D,CACrBC,QAAD,IAAc;AACZ,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHqB,CAAxB;AAOD,SAAO;AACLhB,IAAAA,QAAQ,EAAEa;AADL,GAAP;AAGD,CAhBD;;AAkBA,eAAef,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n  <Layout>\n    <h1>Rick and Morty Episodes</h1>\n    <ul>\n      {props.episodes.map(episode => (\n        <li key={episode.id}>\n          <Link href=\"/episode/[eid]\" as={`/episode/${episode.id}`}>\n            <a>{episode.name}</a>\n          </Link>\n      <p>Release Date: {episode.air_date}</p>\n        </li>\n      ))}\n    </ul>\n    <style jsx>{`\n  h1,\n  a {\n    font-family: 'Arial';\n  }\n\n  ul {\n    padding: 0;\n  }\n\n  li {\n    list-style: none;\n    margin: 5px 0;\n    display: inline-block;\n  }\n\n  a {\n    text-decoration: none;\n    color: blue;\n  }\n\n  a:hover {\n    opacity: 0.6;\n  }\n`}</style>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n \n const eids = Array.from(Array(31).keys());\n  const neids = eids.map(i => {\n     return i+1;\n   });\n   const eresponse = await fetch(`https://rickandmortyapi.com/api/episode/${neids}`).then(\n     (response) => {\n       return response.json();\n     }\n   )\n  \n  \n  return {\n    episodes: eresponse\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}