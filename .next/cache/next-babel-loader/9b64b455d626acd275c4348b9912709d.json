{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/character/[cid].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nvar Character = function Character(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, props.character.name), props.character.image ? __jsx(\"img\", {\n    src: props.character.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 30\n    }\n  }) : null, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 1\n    }\n  }, \"Status: \", props.character.status), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, \"Specie: \", props.character.species), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 1\n    }\n  }, props.character.type ? \"Type: \".concat(props.character.type) : null), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 1\n    }\n  }, \"Gender: \", props.character.gender), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 1\n    }\n  }, \"Origin: \", __jsx(Link, {\n    href: \"/location/[lid]\",\n    as: \"/location/\".concat(props.character.origin.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, props.character.origin.name))), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 1\n    }\n  }, \"Location: \", props.character.location.name), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Episodes\"), props.episodes.map(function (episode) {\n    return __jsx(\"li\", {\n      key: episode.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/episode/[eid]\",\n      as: \"/eepisode/\".concat(episode.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, episode.name)));\n  }));\n};\n\nCharacter.getInitialProps = function _callee(context) {\n  var cid, episodes_arr, res, i, episode, crest;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          cid = context.query.cid;\n          episodes_arr = [];\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"https://rickandmortyapi.com/api/character/\".concat(cid)).then(function (response) {\n            return response.json();\n          }));\n\n        case 4:\n          res = _context.sent;\n          i = 0;\n\n        case 6:\n          if (!(i < res.episode.length)) {\n            _context.next = 15;\n            break;\n          }\n\n          episode = res.episode[i];\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(fetch(episode).then(function (response) {\n            return response.json();\n          }));\n\n        case 10:\n          crest = _context.sent;\n          episodes_arr.push(crest);\n\n        case 12:\n          i++;\n          _context.next = 6;\n          break;\n\n        case 15:\n          ;\n          return _context.abrupt(\"return\", {\n            character: res,\n            episodes: episodes_arr\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Character;","map":{"version":3,"sources":["/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/character/[cid].js"],"names":["Layout","fetch","Link","Character","props","character","name","image","status","species","type","gender","origin","id","location","episodes","map","episode","getInitialProps","context","cid","query","episodes_arr","then","response","json","res","i","length","crest","push"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,SACrB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,SAAN,CAAgBC,IAArB,CADF,EAEGF,KAAK,CAACC,SAAN,CAAgBE,KAAhB,GAAwB;AAAK,IAAA,GAAG,EAAEH,KAAK,CAACC,SAAN,CAAgBE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,GAA8D,IAFjE,EAGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYH,KAAK,CAACC,SAAN,CAAgBG,MAA5B,CAHE,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYJ,KAAK,CAACC,SAAN,CAAgBI,OAA5B,CAJF,EAKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACC,SAAN,CAAgBK,IAAhB,mBAAgCN,KAAK,CAACC,SAAN,CAAgBK,IAAhD,IAAwD,IAA5D,CALE,EAMF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYN,KAAK,CAACC,SAAN,CAAgBM,MAA5B,CANE,EAOF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAY,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,iBAAX;AAA6B,IAAA,EAAE,sBAAeP,KAAK,CAACC,SAAN,CAAgBO,MAAhB,CAAuBC,EAAtC,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,KAAK,CAACC,SAAN,CAAgBO,MAAhB,CAAuBN,IAA3B,CADA,CAAZ,CAPE,EAUF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcF,KAAK,CAACC,SAAN,CAAgBS,QAAhB,CAAyBR,IAAvC,CAVE,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,EAYKF,KAAK,CAACW,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO;AAAA,WACzB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACJ,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,gBAAX;AAA4B,MAAA,EAAE,sBAAeI,OAAO,CAACJ,EAAvB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAII,OAAO,CAACX,IAAZ,CADF,CADF,CADyB;AAAA,GAA1B,CAZL,CADqB;AAAA,CAAvB;;AAuBAH,SAAS,CAACe,eAAV,GAA4B,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,GADkB,GACVD,OAAO,CAACE,KADE,CAClBD,GADkB;AAIpBE,UAAAA,YAJoB,GAIL,EAJK;AAAA;AAAA,2CAKRrB,KAAK,qDAA8CmB,GAA9C,EAAL,CAA0DG,IAA1D,CAChB,UAACC,QAAD,EAAc;AACZ,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,WAHe,CALQ;;AAAA;AAKpBC,UAAAA,GALoB;AAWjBC,UAAAA,CAXiB,GAWb,CAXa;;AAAA;AAAA,gBAWVA,CAAC,GAAGD,GAAG,CAACT,OAAJ,CAAYW,MAXN;AAAA;AAAA;AAAA;;AAYlBX,UAAAA,OAZkB,GAYRS,GAAG,CAACT,OAAJ,CAAYU,CAAZ,CAZQ;AAAA;AAAA,2CAaJ1B,KAAK,CAACgB,OAAD,CAAL,CAAeM,IAAf,CAClB,UAACC,QAAD,EAAc;AACZ,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,WAHiB,CAbI;;AAAA;AAalBI,UAAAA,KAbkB;AAiBxBP,UAAAA,YAAY,CAACQ,IAAb,CAAkBD,KAAlB;;AAjBwB;AAWcF,UAAAA,CAAC,EAXf;AAAA;AAAA;;AAAA;AAkBzB;AAlByB,2CAsBnB;AAAEtB,YAAAA,SAAS,EAAEqB,GAAb;AAAkBX,YAAAA,QAAQ,EAAEO;AAA5B,WAtBmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAyBA,eAAenB,SAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Character = props => (\n  <Layout>\n    <h1>{props.character.name}</h1>\n    {props.character.image ? <img src={props.character.image} /> : null}\n<p>Status: {props.character.status}</p>\n    <p>Specie: {props.character.species}</p>\n<p>{props.character.type ? `Type: ${props.character.type}`: null}</p>\n<p>Gender: {props.character.gender}</p>\n<p>Origin: {<Link href=\"/location/[lid]\" as={`/location/${props.character.origin.id}`}>\n            <a>{props.character.origin.name}</a>\n          </Link>}</p>\n<p>Location: {props.character.location.name}</p>\n      <h2>Episodes</h2>\n      {props.episodes.map(episode => (\n        <li key={episode.id}>\n          <Link href=\"/episode/[eid]\" as={`/eepisode/${episode.id}`}>\n            <a>{episode.name}</a>\n          </Link>\n        </li>\n      ))}\n  </Layout>\n);\n\nCharacter.getInitialProps = async function(context) {\n  const { cid } = context.query;\n\n \n  const episodes_arr = [];\n  const res = await fetch(`https://rickandmortyapi.com/api/character/${cid}`).then(\n    (response) => {\n      return response.json();\n    }\n  )\n  \n  for (let i = 0; i < res.episode.length; i++) {\n    const episode = res.episode[i];\n    const crest = await fetch(episode).then(\n      (response) => {\n        return response.json();\n      })\n    episodes_arr.push(crest);\n  };\n\n\n\n  return { character: res, episodes: episodes_arr };\n};\n\nexport default Character;"]},"metadata":{},"sourceType":"module"}