{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"Rick and Morty Episodes\"), __jsx(\"ul\", null, props.episodes.map(function (episode) {\n    return __jsx(\"li\", {\n      key: episode.id\n    }, __jsx(Link, {\n      href: \"/episode/[eid]\",\n      as: \"/episode/\".concat(episode.id)\n    }, __jsx(\"a\", null, episode.name)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var eresponse, arr, url, _eresponse;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://rickandmortyapi.com/api/episode').then(function (response) {\n            return response.json();\n          }));\n\n        case 2:\n          eresponse = _context.sent;\n          arr = [];\n          url = 'https://rickandmortyapi.com/api/episode/';\n\n        case 5:\n          if (!true) {\n            _context.next = 17;\n            break;\n          }\n\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n            return response.json();\n          }));\n\n        case 8:\n          _eresponse = _context.sent;\n\n          _eresponse.results.forEach(function (episode) {\n            arr.push(episode);\n          });\n\n          if (!(_eresponse.info.next != '')) {\n            _context.next = 14;\n            break;\n          }\n\n          url = _eresponse.info.next;\n          _context.next = 15;\n          break;\n\n        case 14:\n          return _context.abrupt(\"break\", 17);\n\n        case 15:\n          _context.next = 5;\n          break;\n\n        case 17:\n          return _context.abrupt(\"return\", {\n            episodes: arr\n          });\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}