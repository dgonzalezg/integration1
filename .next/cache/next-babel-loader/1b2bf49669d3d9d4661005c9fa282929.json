{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport Link from 'next/link';\n\nvar Results = function Results(props) {\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"Results\"), __jsx(\"ul\", null, props.episodes.map(function (episode) {\n    return __jsx(\"li\", {\n      key: episode.id\n    }, __jsx(Link, {\n      href: \"/episode/[eid]\",\n      as: \"/episode/\".concat(episode.id)\n    }, __jsx(\"a\", null, episode.name)));\n  }), props.characters.map(function (character) {\n    return __jsx(\"li\", {\n      key: character.id\n    }, __jsx(Link, {\n      href: \"/character/[cid]\",\n      as: \"/character/\".concat(character.id)\n    }, __jsx(\"a\", null, character.name)));\n  }), props.locations.map(function (location) {\n    return __jsx(\"li\", {\n      key: location.id\n    }, __jsx(Link, {\n      href: \"/location/[lid]\",\n      as: \"/location/\".concat(location.id)\n    }, __jsx(\"a\", null, location.name)));\n  })));\n};\n\nResults.getInitialProps = function _callee(context) {\n  var query, episodes, characters, locations, eids, neids, eresponse, cids, ncids, cresponse, lids, nlids, lresponse;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = context.query.query;\n          episodes = [];\n          characters = [];\n          locations = [];\n          eids = Array.from(Array(31).keys());\n          neids = eids.map(function (i) {\n            return i + 1;\n          });\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(fetch(\"https://rickandmortyapi.com/api/episode/\".concat(neids)).then(function (response) {\n            return response.json();\n          }));\n\n        case 8:\n          eresponse = _context.sent;\n          eresponse.forEach(function (episode) {\n            if (episode.name.toLowerCase().split(' ').includes(query.toLowerCase())) {\n              episodes.push(episode);\n            }\n          });\n          cids = Array.from(Array(493).keys());\n          ncids = cids.map(function (i) {\n            return i + 1;\n          });\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(fetch(\"https://rickandmortyapi.com/api/character/\".concat(ncids)).then(function (response) {\n            return response.json();\n          }));\n\n        case 14:\n          cresponse = _context.sent;\n          cresponse.forEach(function (character) {\n            if (character.name.toLowerCase().split(' ').includes(query.toLowerCase())) {\n              characters.push(character);\n            }\n          });\n          lids = Array.from(Array(76).keys());\n          nlids = cids.map(function (i) {\n            return i + 1;\n          });\n          _context.next = 20;\n          return _regeneratorRuntime.awrap(fetch(\"https://rickandmortyapi.com/api/location/\".concat(nlids)).then(function (response) {\n            return response.json();\n          }));\n\n        case 20:\n          lresponse = _context.sent;\n          lresponse.forEach(function (location) {\n            if (location.name.toLowerCase().split(' ').includes(query.toLowerCase())) {\n              locations.push(location);\n            }\n          });\n          return _context.abrupt(\"return\", {\n            episodes: episodes,\n            characters: characters,\n            locations: locations\n          });\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Results;","map":null,"metadata":{},"sourceType":"module"}