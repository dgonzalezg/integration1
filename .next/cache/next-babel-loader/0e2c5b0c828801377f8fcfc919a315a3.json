{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/search/[query].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport Link from 'next/link';\n\nvar Results = function Results(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 1\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, \"Results\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, props.episodes.map(function (episode) {\n    return __jsx(\"li\", {\n      key: episode.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/episode/[eid]\",\n      as: \"/episode/\".concat(episode.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, episode.name)));\n  }), props.characters.map(function (character) {\n    return __jsx(\"li\", {\n      key: character.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/character/[cid]\",\n      as: \"/character/\".concat(character.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, character.name)));\n  }), props.locations.map(function (location) {\n    return __jsx(\"li\", {\n      key: location.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/location/[lid]\",\n      as: \"/location/\".concat(location.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, location.name)));\n  })));\n};\n\nResults.getInitialProps = function _callee(context) {\n  var query, episodes, characters, locations, eurl, eresponse, cids, ncids, cresponse, lurl, lresponse;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = context.query.query;\n          episodes = [];\n          characters = [];\n          locations = [];\n          eurl = 'https://rickandmortyapi.com/api/episode/';\n\n        case 5:\n          if (!true) {\n            _context.next = 17;\n            break;\n          }\n\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(fetch(eurl).then(function (response) {\n            return response.json();\n          }));\n\n        case 8:\n          eresponse = _context.sent;\n          eresponse.results.forEach(function (episode) {\n            if (episode.name.toLowerCase().match('/' + query.toLowerCase() + '/')) {\n              episodes.push(episode);\n            }\n          });\n\n          if (!(eresponse.info.next != '')) {\n            _context.next = 14;\n            break;\n          }\n\n          eurl = eresponse.info.next;\n          _context.next = 15;\n          break;\n\n        case 14:\n          return _context.abrupt(\"break\", 17);\n\n        case 15:\n          _context.next = 5;\n          break;\n\n        case 17:\n          cids = Array.from(Array(10).keys());\n          ncids = cids.map(function (i) {\n            return i + 1;\n          });\n          _context.next = 21;\n          return _regeneratorRuntime.awrap(fetch(\"https://rickandmortyapi.com/api/characters/\".concat(ncids)).then(function (response) {\n            return response.json();\n          }));\n\n        case 21:\n          cresponse = _context.sent;\n          console.log(ncids);\n          lurl = 'https://rickandmortyapi.com/api/location/';\n\n        case 24:\n          if (!true) {\n            _context.next = 37;\n            break;\n          }\n\n          _context.next = 27;\n          return _regeneratorRuntime.awrap(fetch(lurl).then(function (response) {\n            return response.json();\n          }));\n\n        case 27:\n          lresponse = _context.sent;\n          lresponse.results.forEach(function (location) {\n            if (location.name.toLowerCase().match('/' + query.toLowerCase() + '/')) {\n              locations.push(location);\n            }\n          });\n\n          if (!(lresponse.info.next != '')) {\n            _context.next = 33;\n            break;\n          }\n\n          lurl = lresponse.info.next;\n          _context.next = 34;\n          break;\n\n        case 33:\n          return _context.abrupt(\"break\", 37);\n\n        case 34:\n          return _context.abrupt(\"return\", {\n            episodes: episodes,\n            characters: characters,\n            locations: locations\n          });\n\n        case 37:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Results;","map":{"version":3,"sources":["/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/search/[query].js"],"names":["Layout","Link","Results","props","episodes","map","episode","id","name","characters","character","locations","location","getInitialProps","context","query","eurl","fetch","then","response","json","eresponse","results","forEach","toLowerCase","match","push","info","next","cids","Array","from","keys","ncids","i","cresponse","console","log","lurl","lresponse"],"mappings":"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","sourcesContent":["import Layout from '../../components/MyLayout';\nimport Link from 'next/link';\nconst Results = props => (\n<Layout>\n    <h1>Results</h1>\n    <ul>\n      {props.episodes.map(episode => (\n        <li key={episode.id}>\n          <Link href=\"/episode/[eid]\" as={`/episode/${episode.id}`}>\n            <a>{episode.name}</a>\n          </Link>\n        </li>\n      ))}\n      {props.characters.map(character => (\n        <li key={character.id}>\n          <Link href=\"/character/[cid]\" as={`/character/${character.id}`}>\n            <a>{character.name}</a>\n          </Link>\n        </li>\n      ))}\n      {props.locations.map(location => (\n        <li key={location.id}>\n          <Link href=\"/location/[lid]\" as={`/location/${location.id}`}>\n            <a>{location.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nResults.getInitialProps = async function(context) {\n  const { query } = context.query;\n  const episodes = [];\n  const characters = [];\n  const locations = [];\n  let eurl = 'https://rickandmortyapi.com/api/episode/';\n   while (true) {\n     const eresponse = await fetch(eurl).then(\n     (response) => {\n       return response.json();\n     }\n   );\n   eresponse.results.forEach(episode => {\n    if (episode.name.toLowerCase().match('/' + query.toLowerCase() + '/')) {\n      episodes.push(episode);\n    }\n   });\n   if (eresponse.info.next != '') {\n     eurl = eresponse.info.next\n   }\n   else {\n     break\n   }\n   }\n\n   const cids = Array.from(Array(10).keys());\n   const ncids = cids.map(i => {\n     return i+1;\n   });\n   const cresponse = await fetch(`https://rickandmortyapi.com/api/characters/${ncids}`).then(\n     (response) => {\n       return response.json();\n     }\n   )\n   console.log(ncids);\n   let lurl = 'https://rickandmortyapi.com/api/location/';\n   while (true) {\n     const lresponse = await fetch(lurl).then(\n     (response) => {\n       return response.json();\n     }\n   );\n   lresponse.results.forEach(location => {\n    if (location.name.toLowerCase().match('/' + query.toLowerCase() + '/')) {\n      locations.push(location);\n    }\n   });\n   if (lresponse.info.next != '') {\n     lurl = lresponse.info.next\n   }\n   else {\n     break\n   }\n\n\n\n  return {episodes, characters, locations};\n}}\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}