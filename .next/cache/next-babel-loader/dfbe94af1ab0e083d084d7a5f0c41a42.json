{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/search/[query].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport Link from 'next/link';\n\nconst Results = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 1\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }\n}, \"Results\"), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, props.episodes.map(episode => __jsx(\"li\", {\n  key: episode.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/episode/[eid]\",\n  as: `/episode/${episode.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }\n}, episode.name)))), props.characters.map(character => __jsx(\"li\", {\n  key: character.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/character/[cid]\",\n  as: `/character/${character.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }\n}, character.name)))), props.locations.map(location => __jsx(\"li\", {\n  key: location.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/location/[lid]\",\n  as: `/location/${location.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }\n}, location.name))))));\n\nResults.getInitialProps = async function (context) {\n  const {\n    query\n  } = context.query;\n  const episodes = [];\n  const characters = [];\n  const locations = [];\n  const eids = Array.from(Array(31).keys());\n  const neids = cids.map(i => {\n    return i + 1;\n  });\n  const eresponse = await fetch(`https://rickandmortyapi.com/api/episode/${neids}`).then(response => {\n    return response.json();\n  });\n  eresponse.forEach(episode => {\n    if (episode.name.toLowerCase().match('/' + query.toLowerCase() + '/')) {\n      episodes.push(episode);\n    }\n  });\n  const cids = Array.from(Array(493).keys());\n  const ncids = cids.map(i => {\n    return i + 1;\n  });\n  const cresponse = await fetch(`https://rickandmortyapi.com/api/character/${ncids}`).then(response => {\n    return response.json();\n  });\n  cresponse.forEach(character => {\n    if (character.name.toLowerCase().match('/' + query.toLowerCase() + '/')) {\n      characters.push(character);\n    }\n  });\n  const lids = Array.from(Array(76).keys());\n  const nlids = cids.map(i => {\n    return i + 1;\n  });\n  const lresponse = await fetch(`https://rickandmortyapi.com/api/location/${nlids}`).then(response => {\n    return response.json();\n  });\n  lresponse.forEach(location => {\n    if (location.name.toLowerCase().match('/' + query.toLowerCase() + '/')) {\n      locations.push(location);\n    }\n  });\n  return {\n    episodes,\n    characters,\n    locations\n  };\n};\n\nexport default Results;","map":{"version":3,"sources":["/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/search/[query].js"],"names":["Layout","Link","Results","props","episodes","map","episode","id","name","characters","character","locations","location","getInitialProps","context","query","eids","Array","from","keys","neids","cids","i","eresponse","fetch","then","response","json","forEach","toLowerCase","match","push","ncids","cresponse","lids","nlids","lresponse"],"mappings":"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","sourcesContent":["import Layout from '../../components/MyLayout';\nimport Link from 'next/link';\nconst Results = props => (\n<Layout>\n    <h1>Results</h1>\n    <ul>\n      {props.episodes.map(episode => (\n        <li key={episode.id}>\n          <Link href=\"/episode/[eid]\" as={`/episode/${episode.id}`}>\n            <a>{episode.name}</a>\n          </Link>\n        </li>\n      ))}\n      {props.characters.map(character => (\n        <li key={character.id}>\n          <Link href=\"/character/[cid]\" as={`/character/${character.id}`}>\n            <a>{character.name}</a>\n          </Link>\n        </li>\n      ))}\n      {props.locations.map(location => (\n        <li key={location.id}>\n          <Link href=\"/location/[lid]\" as={`/location/${location.id}`}>\n            <a>{location.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nResults.getInitialProps = async function(context) {\n  const { query } = context.query;\n  const episodes = [];\n  const characters = [];\n  const locations = [];\n  const eids = Array.from(Array(31).keys());\n  const neids = cids.map(i => {\n     return i+1;\n   });\n   const eresponse = await fetch(`https://rickandmortyapi.com/api/episode/${neids}`).then(\n     (response) => {\n       return response.json();\n     }\n   )\n   eresponse.forEach(episode => {\n    if (episode.name.toLowerCase().match('/' + query.toLowerCase() + '/' )) {\n      episodes.push(episode);\n    }\n  });\n   const cids = Array.from(Array(493).keys());\n   const ncids = cids.map(i => {\n     return i+1;\n   });\n   const cresponse = await fetch(`https://rickandmortyapi.com/api/character/${ncids}`).then(\n     (response) => {\n       return response.json();\n     }\n   )\n   cresponse.forEach(character => {\n    if (character.name.toLowerCase().match('/' + query.toLowerCase() + '/' )) {\n      characters.push(character);\n    }});\n\n\n  const lids = Array.from(Array(76).keys());\n   const nlids = cids.map(i => {\n     return i+1;\n   });\n   const lresponse = await fetch(`https://rickandmortyapi.com/api/location/${nlids}`).then(\n     (response) => {\n       return response.json();\n     }\n   )\n   lresponse.forEach(location => {\n    if (location.name.toLowerCase().match('/' + query.toLowerCase() + '/' )) {\n      locations.push(location);\n    }});\n    \n    \n\n\n  return {episodes, characters, locations};\n}\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}