{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/search/[query].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport Link from 'next/link';\n\nconst Results = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 1\n  }\n}, __jsx(\"h1\", {\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }\n}, \"Results\"), __jsx(\"ul\", {\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, props.episodes.map(episode => __jsx(\"li\", {\n  key: episode.id,\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/episode/[eid]\",\n  as: `/episode/${episode.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }\n}, episode.name)))), props.characters.map(character => __jsx(\"li\", {\n  key: character.id,\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/character/[cid]\",\n  as: `/character/${character.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }\n}, character.name)))), props.locations.map(location => __jsx(\"li\", {\n  key: location.id,\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/location/[lid]\",\n  as: `/location/${location.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }\n}, location.name))))), __jsx(_JSXStyle, {\n  id: \"2059263984\",\n  __self: this\n}, \"h1.jsx-2059263984,a.jsx-2059263984{font-family:'Arial';}ul.jsx-2059263984{padding:0;}li.jsx-2059263984{list-style:none;margin:5px 0;}a.jsx-2059263984{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-2059263984:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kaWVnby9Hb29nbGUgRHJpdmUvUFVDLzIwMjAvVGFsbGVyIGRlIEludGVncmFjaW9uL1RhcmVhL1QxL2ludGVncmF0aW9uMS9wYWdlcy9zZWFyY2gvW3F1ZXJ5XS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0QmdCLEFBSXlCLEFBSVYsQUFJTSxBQUtLLEFBS1QsVUFiZCxFQWNBLElBVmUsSUFSZixTQVNBLHFCQUlhLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2RpZWdvL0dvb2dsZSBEcml2ZS9QVUMvMjAyMC9UYWxsZXIgZGUgSW50ZWdyYWNpb24vVGFyZWEvVDEvaW50ZWdyYXRpb24xL3BhZ2VzL3NlYXJjaC9bcXVlcnldLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5jb25zdCBSZXN1bHRzID0gcHJvcHMgPT4gKFxuPExheW91dD5cbiAgICA8aDE+UmVzdWx0czwvaDE+XG4gICAgPHVsPlxuICAgICAge3Byb3BzLmVwaXNvZGVzLm1hcChlcGlzb2RlID0+IChcbiAgICAgICAgPGxpIGtleT17ZXBpc29kZS5pZH0+XG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9lcGlzb2RlL1tlaWRdXCIgYXM9e2AvZXBpc29kZS8ke2VwaXNvZGUuaWR9YH0+XG4gICAgICAgICAgICA8YT57ZXBpc29kZS5uYW1lfTwvYT5cbiAgICAgICAgICA8L0xpbms+XG4gICAgICAgIDwvbGk+XG4gICAgICApKX1cbiAgICAgIHtwcm9wcy5jaGFyYWN0ZXJzLm1hcChjaGFyYWN0ZXIgPT4gKFxuICAgICAgICA8bGkga2V5PXtjaGFyYWN0ZXIuaWR9PlxuICAgICAgICAgIDxMaW5rIGhyZWY9XCIvY2hhcmFjdGVyL1tjaWRdXCIgYXM9e2AvY2hhcmFjdGVyLyR7Y2hhcmFjdGVyLmlkfWB9PlxuICAgICAgICAgICAgPGE+e2NoYXJhY3Rlci5uYW1lfTwvYT5cbiAgICAgICAgICA8L0xpbms+XG4gICAgICAgIDwvbGk+XG4gICAgICApKX1cbiAgICAgIHtwcm9wcy5sb2NhdGlvbnMubWFwKGxvY2F0aW9uID0+IChcbiAgICAgICAgPGxpIGtleT17bG9jYXRpb24uaWR9PlxuICAgICAgICAgIDxMaW5rIGhyZWY9XCIvbG9jYXRpb24vW2xpZF1cIiBhcz17YC9sb2NhdGlvbi8ke2xvY2F0aW9uLmlkfWB9PlxuICAgICAgICAgICAgPGE+e2xvY2F0aW9uLm5hbWV9PC9hPlxuICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgPC9saT5cbiAgICAgICkpfVxuICAgIDwvdWw+XG4gICAgPHN0eWxlIGpzeD57YFxuICBoMSxcbiAgYSB7XG4gICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XG4gIH1cblxuICB1bCB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuXG4gIGxpIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogNXB4IDA7XG4gIH1cblxuICBhIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6IGJsdWU7XG4gIH1cblxuICBhOmhvdmVyIHtcbiAgICBvcGFjaXR5OiAwLjY7XG4gIH1cbmB9PC9zdHlsZT5cbiAgPC9MYXlvdXQ+XG4pO1xuXG5SZXN1bHRzLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgY29uc3QgeyBxdWVyeSB9ID0gY29udGV4dC5xdWVyeTtcbiAgY29uc3QgZXBpc29kZXMgPSBbXTtcbiAgY29uc3QgY2hhcmFjdGVycyA9IFtdO1xuICBjb25zdCBsb2NhdGlvbnMgPSBbXTtcbiAgY29uc3QgZWlkcyA9IEFycmF5LmZyb20oQXJyYXkoMzEpLmtleXMoKSk7XG4gIGNvbnN0IG5laWRzID0gZWlkcy5tYXAoaSA9PiB7XG4gICAgIHJldHVybiBpKzE7XG4gICB9KTtcbiAgIGNvbnN0IGVyZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwczovL3JpY2thbmRtb3J0eWFwaS5jb20vYXBpL2VwaXNvZGUvJHtuZWlkc31gKS50aGVuKFxuICAgICAocmVzcG9uc2UpID0+IHtcbiAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgICB9XG4gICApXG4gICBlcmVzcG9uc2UuZm9yRWFjaChlcGlzb2RlID0+IHtcbiAgICBpZiAoZXBpc29kZS5uYW1lLnRvTG93ZXJDYXNlKCkuc3BsaXQoJyAnKS5pbmNsdWRlcyhxdWVyeS50b0xvd2VyQ2FzZSgpKSkge1xuICAgICAgZXBpc29kZXMucHVzaChlcGlzb2RlKTtcbiAgICB9XG4gIH0pO1xuICAgY29uc3QgY2lkcyA9IEFycmF5LmZyb20oQXJyYXkoNDkzKS5rZXlzKCkpO1xuICAgY29uc3QgbmNpZHMgPSBjaWRzLm1hcChpID0+IHtcbiAgICAgcmV0dXJuIGkrMTtcbiAgIH0pO1xuICAgY29uc3QgY3Jlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vcmlja2FuZG1vcnR5YXBpLmNvbS9hcGkvY2hhcmFjdGVyLyR7bmNpZHN9YCkudGhlbihcbiAgICAgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICAgfVxuICAgKVxuICAgY3Jlc3BvbnNlLmZvckVhY2goY2hhcmFjdGVyID0+IHtcbiAgICBpZiAoY2hhcmFjdGVyLm5hbWUudG9Mb3dlckNhc2UoKS5zcGxpdCgnICcpLmluY2x1ZGVzKHF1ZXJ5LnRvTG93ZXJDYXNlKCkpKSB7XG4gICAgICBjaGFyYWN0ZXJzLnB1c2goY2hhcmFjdGVyKTtcbiAgICB9fSk7XG5cblxuICBjb25zdCBsaWRzID0gQXJyYXkuZnJvbShBcnJheSg3Nikua2V5cygpKTtcbiAgIGNvbnN0IG5saWRzID0gY2lkcy5tYXAoaSA9PiB7XG4gICAgIHJldHVybiBpKzE7XG4gICB9KTtcbiAgIGNvbnN0IGxyZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwczovL3JpY2thbmRtb3J0eWFwaS5jb20vYXBpL2xvY2F0aW9uLyR7bmxpZHN9YCkudGhlbihcbiAgICAgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICAgfVxuICAgKVxuICAgbHJlc3BvbnNlLmZvckVhY2gobG9jYXRpb24gPT4ge1xuICAgIGlmIChsb2NhdGlvbi5uYW1lLnRvTG93ZXJDYXNlKCkuc3BsaXQoJyAnKS5pbmNsdWRlcyhxdWVyeS50b0xvd2VyQ2FzZSgpKSkge1xuICAgICAgbG9jYXRpb25zLnB1c2gobG9jYXRpb24pO1xuICAgIH19KTtcbiAgICBcbiAgICBcblxuXG4gIHJldHVybiB7ZXBpc29kZXMsIGNoYXJhY3RlcnMsIGxvY2F0aW9uc307XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlc3VsdHM7Il19 */\\n/*@ sourceURL=/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/search/[query].js */\"));\n\nResults.getInitialProps = async function (context) {\n  const {\n    query\n  } = context.query;\n  const episodes = [];\n  const characters = [];\n  const locations = [];\n  const eids = Array.from(Array(31).keys());\n  const neids = eids.map(i => {\n    return i + 1;\n  });\n  const eresponse = await fetch(`https://rickandmortyapi.com/api/episode/${neids}`).then(response => {\n    return response.json();\n  });\n  eresponse.forEach(episode => {\n    if (episode.name.toLowerCase().split(' ').includes(query.toLowerCase())) {\n      episodes.push(episode);\n    }\n  });\n  const cids = Array.from(Array(493).keys());\n  const ncids = cids.map(i => {\n    return i + 1;\n  });\n  const cresponse = await fetch(`https://rickandmortyapi.com/api/character/${ncids}`).then(response => {\n    return response.json();\n  });\n  cresponse.forEach(character => {\n    if (character.name.toLowerCase().split(' ').includes(query.toLowerCase())) {\n      characters.push(character);\n    }\n  });\n  const lids = Array.from(Array(76).keys());\n  const nlids = cids.map(i => {\n    return i + 1;\n  });\n  const lresponse = await fetch(`https://rickandmortyapi.com/api/location/${nlids}`).then(response => {\n    return response.json();\n  });\n  lresponse.forEach(location => {\n    if (location.name.toLowerCase().split(' ').includes(query.toLowerCase())) {\n      locations.push(location);\n    }\n  });\n  return {\n    episodes,\n    characters,\n    locations\n  };\n};\n\nexport default Results;","map":{"version":3,"sources":["/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/search/[query].js"],"names":["Layout","Link","Results","props","episodes","map","episode","id","name","characters","character","locations","location","getInitialProps","context","query","eids","Array","from","keys","neids","i","eresponse","fetch","then","response","json","forEach","toLowerCase","split","includes","push","cids","ncids","cresponse","lids","nlids","lresponse"],"mappings":"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","sourcesContent":["import Layout from '../../components/MyLayout';\nimport Link from 'next/link';\nconst Results = props => (\n<Layout>\n    <h1>Results</h1>\n    <ul>\n      {props.episodes.map(episode => (\n        <li key={episode.id}>\n          <Link href=\"/episode/[eid]\" as={`/episode/${episode.id}`}>\n            <a>{episode.name}</a>\n          </Link>\n        </li>\n      ))}\n      {props.characters.map(character => (\n        <li key={character.id}>\n          <Link href=\"/character/[cid]\" as={`/character/${character.id}`}>\n            <a>{character.name}</a>\n          </Link>\n        </li>\n      ))}\n      {props.locations.map(location => (\n        <li key={location.id}>\n          <Link href=\"/location/[lid]\" as={`/location/${location.id}`}>\n            <a>{location.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n    <style jsx>{`\n  h1,\n  a {\n    font-family: 'Arial';\n  }\n\n  ul {\n    padding: 0;\n  }\n\n  li {\n    list-style: none;\n    margin: 5px 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: blue;\n  }\n\n  a:hover {\n    opacity: 0.6;\n  }\n`}</style>\n  </Layout>\n);\n\nResults.getInitialProps = async function(context) {\n  const { query } = context.query;\n  const episodes = [];\n  const characters = [];\n  const locations = [];\n  const eids = Array.from(Array(31).keys());\n  const neids = eids.map(i => {\n     return i+1;\n   });\n   const eresponse = await fetch(`https://rickandmortyapi.com/api/episode/${neids}`).then(\n     (response) => {\n       return response.json();\n     }\n   )\n   eresponse.forEach(episode => {\n    if (episode.name.toLowerCase().split(' ').includes(query.toLowerCase())) {\n      episodes.push(episode);\n    }\n  });\n   const cids = Array.from(Array(493).keys());\n   const ncids = cids.map(i => {\n     return i+1;\n   });\n   const cresponse = await fetch(`https://rickandmortyapi.com/api/character/${ncids}`).then(\n     (response) => {\n       return response.json();\n     }\n   )\n   cresponse.forEach(character => {\n    if (character.name.toLowerCase().split(' ').includes(query.toLowerCase())) {\n      characters.push(character);\n    }});\n\n\n  const lids = Array.from(Array(76).keys());\n   const nlids = cids.map(i => {\n     return i+1;\n   });\n   const lresponse = await fetch(`https://rickandmortyapi.com/api/location/${nlids}`).then(\n     (response) => {\n       return response.json();\n     }\n   )\n   lresponse.forEach(location => {\n    if (location.name.toLowerCase().split(' ').includes(query.toLowerCase())) {\n      locations.push(location);\n    }});\n    \n    \n\n\n  return {episodes, characters, locations};\n}\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}