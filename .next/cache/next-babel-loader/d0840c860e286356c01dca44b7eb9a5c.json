{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, \"Rick and Morty Episodes\"), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, props.episodes.map(episode => __jsx(\"li\", {\n  key: episode.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${episode.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }\n}, episode.name))))));\n\nIndex.getInitialProps = async function () {\n  const eresponse = await fetch('https://rickandmortyapi.com/api/episode').then(response => {\n    return response.json();\n  });\n  console.log(eresponse); // console.log(`episode data fetched. Count: ${data}`);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js"],"names":["Layout","Link","fetch","Index","props","episodes","map","episode","id","name","getInitialProps","eresponse","then","response","json","console","log"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IACzB;AAAI,EAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,OAAO,CAACC,EAAG,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,OAAO,CAACE,IAAZ,CADF,CADF,CADD,CADH,CAFF,CADF;;AAeAN,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,SAAS,GAAG,MAAMT,KAAK,CAAC,yCAAD,CAAL,CAAiDU,IAAjD,CACrBC,QAAD,IAAc;AACZ,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHqB,CAAxB;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ,EANuC,CAQvC;AAGD,CAXD;;AAaA,eAAeR,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n  <Layout>\n    <h1>Rick and Morty Episodes</h1>\n    <ul>\n      {props.episodes.map(episode => (\n        <li key={episode.id}>\n          <Link href=\"/p/[id]\" as={`/p/${episode.id}`}>\n            <a>{episode.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const eresponse = await fetch('https://rickandmortyapi.com/api/episode').then(\n    (response) => {\n      return response.json();\n    }\n  );\n  console.log(eresponse);\n  \n  // console.log(`episode data fetched. Count: ${data}`);\n\n  \n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}