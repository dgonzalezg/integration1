{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/episode/[eid].js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport api_url from '..index/';\n\nvar Episode = function Episode(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-2059263984\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, props.episode.name), __jsx(\"p\", {\n    className: \"jsx-2059263984\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 1\n    }\n  }, \"Release date: \", props.episode.air_date), __jsx(\"p\", {\n    className: \"jsx-2059263984\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, \"Episdode Code: \", props.episode.episode), __jsx(\"h2\", {\n    className: \"jsx-2059263984\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, \" Characters in this episode\"), props.characters.map(function (character) {\n    return __jsx(\"li\", {\n      key: character.id,\n      className: \"jsx-2059263984\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/character/[cid]\",\n      as: \"/character/\".concat(character.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-2059263984\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, character.name)));\n  }), __jsx(_JSXStyle, {\n    id: \"2059263984\",\n    __self: _this\n  }, \"h1.jsx-2059263984,a.jsx-2059263984{font-family:'Arial';}ul.jsx-2059263984{padding:0;}li.jsx-2059263984{list-style:none;margin:5px 0;}a.jsx-2059263984{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-2059263984:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kaWVnby9Hb29nbGUgRHJpdmUvUFVDLzIwMjAvVGFsbGVyIGRlIEludGVncmFjaW9uL1RhcmVhL1QxL2ludGVncmF0aW9uMS9wYWdlcy9lcGlzb2RlL1tlaWRdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlCbUIsQUFJeUIsQUFJVixBQUlNLEFBS0ssQUFLVCxVQWJkLEVBY0EsSUFWZSxJQVJmLFNBU0EscUJBSWEsV0FDYiIsImZpbGUiOiIvVXNlcnMvZGllZ28vR29vZ2xlIERyaXZlL1BVQy8yMDIwL1RhbGxlciBkZSBJbnRlZ3JhY2lvbi9UYXJlYS9UMS9pbnRlZ3JhdGlvbjEvcGFnZXMvZXBpc29kZS9bZWlkXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9NeUxheW91dCc7XG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgYXBpX3VybCBmcm9tICcuLmluZGV4LydcbmNvbnN0IEVwaXNvZGUgPSBwcm9wcyA9PiAoXG4gIDxMYXlvdXQ+XG4gICAgPGgxPntwcm9wcy5lcGlzb2RlLm5hbWV9PC9oMT5cbjxwPlJlbGVhc2UgZGF0ZToge3Byb3BzLmVwaXNvZGUuYWlyX2RhdGV9PC9wPlxuICAgIDxwPkVwaXNkb2RlIENvZGU6IHtwcm9wcy5lcGlzb2RlLmVwaXNvZGV9PC9wPlxuICAgIDxoMj4gQ2hhcmFjdGVycyBpbiB0aGlzIGVwaXNvZGU8L2gyPlxuICAgIHtwcm9wcy5jaGFyYWN0ZXJzLm1hcChjaGFyYWN0ZXIgPT4gKFxuICAgICAgICA8bGkga2V5PXtjaGFyYWN0ZXIuaWR9PlxuICAgICAgICAgIDxMaW5rIGhyZWY9XCIvY2hhcmFjdGVyL1tjaWRdXCIgYXM9e2AvY2hhcmFjdGVyLyR7Y2hhcmFjdGVyLmlkfWB9PlxuICAgICAgICAgICAgPGE+e2NoYXJhY3Rlci5uYW1lfTwvYT5cbiAgICAgICAgICA8L0xpbms+XG4gICAgICAgIDwvbGk+XG4gICAgICApKX1cbiAgICAgICA8c3R5bGUganN4PntgXG4gIGgxLFxuICBhIHtcbiAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgfVxuXG4gIHVsIHtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5cbiAgbGkge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiA1cHggMDtcbiAgfVxuXG4gIGEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogYmx1ZTtcbiAgfVxuXG4gIGE6aG92ZXIge1xuICAgIG9wYWNpdHk6IDAuNjtcbiAgfVxuYH08L3N0eWxlPlxuICA8L0xheW91dD5cbik7XG5cbkVwaXNvZGUuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oY29udGV4dCkge1xuICBjb25zdCB7IGVpZCB9ID0gY29udGV4dC5xdWVyeTtcblxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHthcGlfdXJsfWVwaXNvZGUvJHtlaWR9YCkudGhlbihcbiAgICAocmVzcG9uc2UpID0+IHtcbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgfVxuICApXG4gIGNvbnN0IGNpZHMgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXMuY2hhcmFjdGVycy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGNoYXJhY3RlciA9IHJlcy5jaGFyYWN0ZXJzW2ldLnNwbGl0KCcvJyk7XG4gICAgY29uc3QgaWQgPSBjaGFyYWN0ZXJbY2hhcmFjdGVyLmxlbmd0aC0xXVxuICAgIGNpZHMucHVzaChpZCk7XG4gIH07XG4gIGNvbnN0IGNoYXJhY3RlcnNfYXJyID0gYXdhaXQgZmV0Y2goYCR7YXBpX3VybH1jaGFyYWN0ZXIvJHtjaWRzfWApLnRoZW4oXG4gICAgKHJlc3BvbnNlKSA9PiB7XG4gICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgIH0pXG5cblxuICByZXR1cm4geyBlcGlzb2RlOiByZXMsIGNoYXJhY3RlcnM6IGNoYXJhY3RlcnNfYXJyIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBFcGlzb2RlOyJdfQ== */\\n/*@ sourceURL=/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/episode/[eid].js */\"));\n};\n\nEpisode.getInitialProps = function _callee(context) {\n  var eid, res, cids, i, character, id, characters_arr;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          eid = context.query.eid;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(api_url, \"episode/\").concat(eid)).then(function (response) {\n            return response.json();\n          }));\n\n        case 3:\n          res = _context.sent;\n          cids = [];\n\n          for (i = 0; i < res.characters.length; i++) {\n            character = res.characters[i].split('/');\n            id = character[character.length - 1];\n            cids.push(id);\n          }\n\n          ;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(api_url, \"character/\").concat(cids)).then(function (response) {\n            return response.json();\n          }));\n\n        case 9:\n          characters_arr = _context.sent;\n          return _context.abrupt(\"return\", {\n            episode: res,\n            characters: characters_arr\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Episode;","map":{"version":3,"sources":["/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/episode/[eid].js"],"names":["Layout","fetch","Link","api_url","Episode","props","episode","name","air_date","characters","map","character","id","getInitialProps","context","eid","query","then","response","json","res","cids","i","length","split","push","characters_arr"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,UAApB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,OAAN,CAAcC,IAAnB,CADF,EAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBF,KAAK,CAACC,OAAN,CAAcE,QAAhC,CAFE,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBH,KAAK,CAACC,OAAN,CAAcA,OAAjC,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJF,EAKGD,KAAK,CAACI,UAAN,CAAiBC,GAAjB,CAAqB,UAAAC,SAAS;AAAA,WAC3B;AAAI,MAAA,GAAG,EAAEA,SAAS,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,kBAAX;AAA8B,MAAA,EAAE,uBAAgBD,SAAS,CAACC,EAA1B,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,SAAS,CAACJ,IAAd,CADF,CADF,CAD2B;AAAA,GAA9B,CALH;AAAA;AAAA;AAAA,84FADmB;AAAA,CAArB;;AAwCAH,OAAO,CAACS,eAAR,GAA0B,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,GADgB,GACRD,OAAO,CAACE,KADA,CAChBD,GADgB;AAAA;AAAA,2CAGNd,KAAK,WAAIE,OAAJ,qBAAsBY,GAAtB,EAAL,CAAkCE,IAAlC,CAChB,UAACC,QAAD,EAAc;AACZ,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,WAHe,CAHM;;AAAA;AAGlBC,UAAAA,GAHkB;AAQlBC,UAAAA,IARkB,GAQX,EARW;;AASxB,eAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACX,UAAJ,CAAec,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AACxCX,YAAAA,SADwC,GAC5BS,GAAG,CAACX,UAAJ,CAAea,CAAf,EAAkBE,KAAlB,CAAwB,GAAxB,CAD4B;AAExCZ,YAAAA,EAFwC,GAEnCD,SAAS,CAACA,SAAS,CAACY,MAAV,GAAiB,CAAlB,CAF0B;AAG9CF,YAAAA,IAAI,CAACI,IAAL,CAAUb,EAAV;AACD;;AAAA;AAbuB;AAAA,2CAcKX,KAAK,WAAIE,OAAJ,uBAAwBkB,IAAxB,EAAL,CAAqCJ,IAArC,CAC3B,UAACC,QAAD,EAAc;AACZ,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,WAH0B,CAdL;;AAAA;AAclBO,UAAAA,cAdkB;AAAA,2CAoBjB;AAAEpB,YAAAA,OAAO,EAAEc,GAAX;AAAgBX,YAAAA,UAAU,EAAEiB;AAA5B,WApBiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAuBA,eAAetB,OAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport api_url from '..index/'\nconst Episode = props => (\n  <Layout>\n    <h1>{props.episode.name}</h1>\n<p>Release date: {props.episode.air_date}</p>\n    <p>Episdode Code: {props.episode.episode}</p>\n    <h2> Characters in this episode</h2>\n    {props.characters.map(character => (\n        <li key={character.id}>\n          <Link href=\"/character/[cid]\" as={`/character/${character.id}`}>\n            <a>{character.name}</a>\n          </Link>\n        </li>\n      ))}\n       <style jsx>{`\n  h1,\n  a {\n    font-family: 'Arial';\n  }\n\n  ul {\n    padding: 0;\n  }\n\n  li {\n    list-style: none;\n    margin: 5px 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: blue;\n  }\n\n  a:hover {\n    opacity: 0.6;\n  }\n`}</style>\n  </Layout>\n);\n\nEpisode.getInitialProps = async function(context) {\n  const { eid } = context.query;\n\n  const res = await fetch(`${api_url}episode/${eid}`).then(\n    (response) => {\n      return response.json();\n    }\n  )\n  const cids = [];\n  for (let i = 0; i < res.characters.length; i++) {\n    const character = res.characters[i].split('/');\n    const id = character[character.length-1]\n    cids.push(id);\n  };\n  const characters_arr = await fetch(`${api_url}character/${cids}`).then(\n    (response) => {\n      return response.json();\n    })\n\n\n  return { episode: res, characters: characters_arr };\n};\n\nexport default Episode;"]},"metadata":{},"sourceType":"module"}