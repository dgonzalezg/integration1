{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, __jsx(\"h1\", {\n  className: \"jsx-3677946590\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, \"Rick and Morty Episodes\"), __jsx(\"ul\", {\n  className: \"jsx-3677946590\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, props.episodes.map(episode => __jsx(\"li\", {\n  key: episode.id,\n  className: \"jsx-3677946590\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/episode/[eid]\",\n  as: `/episode/${episode.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  className: \"jsx-3677946590\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }\n}, episode.name)), __jsx(\"p\", {\n  className: \"jsx-3677946590\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, \"Release Date: \", episode.air_date)))), __jsx(_JSXStyle, {\n  id: \"3677946590\",\n  __self: this\n}, \"h1.jsx-3677946590,a.jsx-3677946590{font-family:'Arial';}ul.jsx-3677946590{padding:0;}li.jsx-3677946590{list-style:none;margin:5px 0;}a.jsx-3677946590{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-3677946590:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kaWVnby9Hb29nbGUgRHJpdmUvUFVDLzIwMjAvVGFsbGVyIGRlIEludGVncmFjaW9uL1RhcmVhL1QxL2ludGVncmF0aW9uMS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQmdCLEFBSXlCLEFBSVYsQUFJTSxBQU1LLEFBS1QsVUFkZCxFQWVBLElBWGUsSUFSZixTQVVBLHFCQUlhLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2RpZWdvL0dvb2dsZSBEcml2ZS9QVUMvMjAyMC9UYWxsZXIgZGUgSW50ZWdyYWNpb24vVGFyZWEvVDEvaW50ZWdyYXRpb24xL3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcblxuY29uc3QgSW5kZXggPSBwcm9wcyA9PiAoXG4gIDxMYXlvdXQ+XG4gICAgPGgxPlJpY2sgYW5kIE1vcnR5IEVwaXNvZGVzPC9oMT5cbiAgICA8dWw+XG4gICAgICB7cHJvcHMuZXBpc29kZXMubWFwKGVwaXNvZGUgPT4gKFxuICAgICAgICA8bGkga2V5PXtlcGlzb2RlLmlkfT5cbiAgICAgICAgICA8TGluayBocmVmPVwiL2VwaXNvZGUvW2VpZF1cIiBhcz17YC9lcGlzb2RlLyR7ZXBpc29kZS5pZH1gfT5cbiAgICAgICAgICAgIDxhPntlcGlzb2RlLm5hbWV9PC9hPlxuICAgICAgICAgIDwvTGluaz5cbiAgICAgIDxwPlJlbGVhc2UgRGF0ZToge2VwaXNvZGUuYWlyX2RhdGV9PC9wPlxuICAgICAgICA8L2xpPlxuICAgICAgKSl9XG4gICAgPC91bD5cbiAgICA8c3R5bGUganN4PntgXG4gIGgxLFxuICBhIHtcbiAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgfVxuXG4gIHVsIHtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5cbiAgbGkge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiA1cHggMDtcbiAgICBcbiAgfVxuXG4gIGEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogYmx1ZTtcbiAgfVxuXG4gIGE6aG92ZXIge1xuICAgIG9wYWNpdHk6IDAuNjtcbiAgfVxuYH08L3N0eWxlPlxuICA8L0xheW91dD5cbik7XG5cbkluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKCkge1xuIFxuIGNvbnN0IGVpZHMgPSBBcnJheS5mcm9tKEFycmF5KDMxKS5rZXlzKCkpO1xuICBjb25zdCBuZWlkcyA9IGVpZHMubWFwKGkgPT4ge1xuICAgICByZXR1cm4gaSsxO1xuICAgfSk7XG4gICBjb25zdCBlcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9yaWNrYW5kbW9ydHlhcGkuY29tL2FwaS9lcGlzb2RlLyR7bmVpZHN9YCkudGhlbihcbiAgICAgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICAgfVxuICAgKVxuICBcbiAgXG4gIHJldHVybiB7XG4gICAgZXBpc29kZXM6IGVyZXNwb25zZVxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXg7Il19 */\\n/*@ sourceURL=/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js */\"));\n\nIndex.getInitialProps = async function () {\n  const eids = Array.from(Array(31).keys());\n  const neids = eids.map(i => {\n    return i + 1;\n  });\n  const eresponse = await fetch(`https://rickandmortyapi.com/api/episode/${neids}`).then(response => {\n    return response.json();\n  });\n  return {\n    episodes: eresponse\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js"],"names":["Layout","Link","fetch","Index","props","episodes","map","episode","id","name","air_date","getInitialProps","eids","Array","from","keys","neids","i","eresponse","then","response","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IACzB;AAAI,EAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,gBAAX;AAA4B,EAAA,EAAE,EAAG,YAAWD,OAAO,CAACC,EAAG,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,OAAO,CAACE,IAAZ,CADF,CADF,EAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBF,OAAO,CAACG,QAA1B,CAJE,CADD,CADH,CAFF;AAAA;AAAA;AAAA,44EADF;;AAyCAP,KAAK,CAACQ,eAAN,GAAwB,kBAAiB;AAExC,QAAMC,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,CAAb;AACC,QAAMC,KAAK,GAAGJ,IAAI,CAACN,GAAL,CAASW,CAAC,IAAI;AACzB,WAAOA,CAAC,GAAC,CAAT;AACD,GAFY,CAAd;AAGC,QAAMC,SAAS,GAAG,MAAMhB,KAAK,CAAE,2CAA0Cc,KAAM,EAAlD,CAAL,CAA0DG,IAA1D,CACrBC,QAAD,IAAc;AACZ,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHqB,CAAxB;AAOD,SAAO;AACLhB,IAAAA,QAAQ,EAAEa;AADL,GAAP;AAGD,CAhBD;;AAkBA,eAAef,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n  <Layout>\n    <h1>Rick and Morty Episodes</h1>\n    <ul>\n      {props.episodes.map(episode => (\n        <li key={episode.id}>\n          <Link href=\"/episode/[eid]\" as={`/episode/${episode.id}`}>\n            <a>{episode.name}</a>\n          </Link>\n      <p>Release Date: {episode.air_date}</p>\n        </li>\n      ))}\n    </ul>\n    <style jsx>{`\n  h1,\n  a {\n    font-family: 'Arial';\n  }\n\n  ul {\n    padding: 0;\n  }\n\n  li {\n    list-style: none;\n    margin: 5px 0;\n    \n  }\n\n  a {\n    text-decoration: none;\n    color: blue;\n  }\n\n  a:hover {\n    opacity: 0.6;\n  }\n`}</style>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n \n const eids = Array.from(Array(31).keys());\n  const neids = eids.map(i => {\n     return i+1;\n   });\n   const eresponse = await fetch(`https://rickandmortyapi.com/api/episode/${neids}`).then(\n     (response) => {\n       return response.json();\n     }\n   )\n  \n  \n  return {\n    episodes: eresponse\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}