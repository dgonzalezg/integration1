{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/location/[lid].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Location = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, __jsx(\"h1\", {\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, props.location.name), __jsx(\"p\", {\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 1\n  }\n}, \"Type: \", props.location.type), __jsx(\"p\", {\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, \"Dimension: \", props.location.dimension), __jsx(\"h2\", {\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, \" Residents\"), props.residents[0] ? props.residents.map(resident => __jsx(\"li\", {\n  key: resident.id,\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/character/[cid]\",\n  as: `/character/${resident.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  className: \"jsx-2059263984\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }\n}, resident.name)))) : 'No residents in this planet', __jsx(_JSXStyle, {\n  id: \"2059263984\",\n  __self: this\n}, \"h1.jsx-2059263984,a.jsx-2059263984{font-family:'Arial';}ul.jsx-2059263984{padding:0;}li.jsx-2059263984{list-style:none;margin:5px 0;}a.jsx-2059263984{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-2059263984:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kaWVnby9Hb29nbGUgRHJpdmUvUFVDLzIwMjAvVGFsbGVyIGRlIEludGVncmFjaW9uL1RhcmVhL1QxL2ludGVncmF0aW9uMS9wYWdlcy9sb2NhdGlvbi9bbGlkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQm1CLEFBSXlCLEFBSVYsQUFJTSxBQUtLLEFBS1QsVUFiZCxFQWNBLElBVmUsSUFSZixTQVNBLHFCQUlhLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2RpZWdvL0dvb2dsZSBEcml2ZS9QVUMvMjAyMC9UYWxsZXIgZGUgSW50ZWdyYWNpb24vVGFyZWEvVDEvaW50ZWdyYXRpb24xL3BhZ2VzL2xvY2F0aW9uL1tsaWRdLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcblxuY29uc3QgTG9jYXRpb24gPSBwcm9wcyA9PiAoXG4gIDxMYXlvdXQ+XG4gICAgPGgxPntwcm9wcy5sb2NhdGlvbi5uYW1lfTwvaDE+XG48cD5UeXBlOiB7cHJvcHMubG9jYXRpb24udHlwZX08L3A+XG4gICAgPHA+RGltZW5zaW9uOiB7cHJvcHMubG9jYXRpb24uZGltZW5zaW9ufTwvcD5cbiAgICA8aDI+IFJlc2lkZW50czwvaDI+XG4gICAgeyBwcm9wcy5yZXNpZGVudHNbMF0gPyBwcm9wcy5yZXNpZGVudHMubWFwKHJlc2lkZW50ID0+IChcbiAgICAgICAgPGxpIGtleT17cmVzaWRlbnQuaWR9PlxuICAgICAgICAgIDxMaW5rIGhyZWY9XCIvY2hhcmFjdGVyL1tjaWRdXCIgYXM9e2AvY2hhcmFjdGVyLyR7cmVzaWRlbnQuaWR9YH0+XG4gICAgICAgICAgICA8YT57cmVzaWRlbnQubmFtZX08L2E+XG4gICAgICAgICAgPC9MaW5rPlxuICAgICAgICA8L2xpPlxuICAgICAgKSk6ICdObyByZXNpZGVudHMgaW4gdGhpcyBwbGFuZXQnfVxuICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgaDEsXG4gIGEge1xuICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICB9XG5cbiAgdWwge1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cblxuICBsaSB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBtYXJnaW46IDVweCAwO1xuICB9XG5cbiAgYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiBibHVlO1xuICB9XG5cbiAgYTpob3ZlciB7XG4gICAgb3BhY2l0eTogMC42O1xuICB9XG5gfTwvc3R5bGU+XG4gIDwvTGF5b3V0PlxuKTtcblxuTG9jYXRpb24uZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oY29udGV4dCkge1xuICBjb25zdCB7IGxpZCB9ID0gY29udGV4dC5xdWVyeTtcblxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9yaWNrYW5kbW9ydHlhcGkuY29tL2FwaS9sb2NhdGlvbi8ke2xpZH1gKS50aGVuKFxuICAgIChyZXNwb25zZSkgPT4ge1xuICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICB9XG4gIClcbiAgY29uc3QgcmlkcyA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHJlcy5yZXNpZGVudHMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCByZXNpZGVudCA9IHJlcy5yZXNpZGVudHNbaV0uc3BsaXQoJy8nKTtcbiAgICByaWRzLnB1c2gocmVzaWRlbnRbcmVzaWRlbnQubGVuZ3RoLTFdKTtcbiAgfTtcbiAgXG4gIGxldCByZXNpZGVudHNfYXJyID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vcmlja2FuZG1vcnR5YXBpLmNvbS9hcGkvY2hhcmFjdGVyLyR7cmlkc31gKS50aGVuKFxuICAgIChyZXNwb25zZSkgPT4ge1xuICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICB9KVxuICAgIGlmIChyaWRzLmxlbmd0aCA9PSAwKSB7XG4gICAgICByZXNpZGVudHNfYXJyID0gW107XG4gICAgfVxuXG4gIHJldHVybiB7IGxvY2F0aW9uOiByZXMsIHJlc2lkZW50czogcmVzaWRlbnRzX2FyciB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTG9jYXRpb247Il19 */\\n/*@ sourceURL=/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/location/[lid].js */\"));\n\nLocation.getInitialProps = async function (context) {\n  const {\n    lid\n  } = context.query;\n  const res = await fetch(`https://rickandmortyapi.com/api/location/${lid}`).then(response => {\n    return response.json();\n  });\n  const rids = [];\n\n  for (let i = 0; i < res.residents.length; i++) {\n    const resident = res.residents[i].split('/');\n    rids.push(resident[resident.length - 1]);\n  }\n\n  ;\n  let residents_arr = await fetch(`https://rickandmortyapi.com/api/character/${rids}`).then(response => {\n    return response.json();\n  });\n\n  if (rids.length == 0) {\n    residents_arr = [];\n  }\n\n  return {\n    location: res,\n    residents: residents_arr\n  };\n};\n\nexport default Location;","map":{"version":3,"sources":["/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/location/[lid].js"],"names":["Layout","fetch","Link","Location","props","location","name","type","dimension","residents","map","resident","id","getInitialProps","context","lid","query","res","then","response","json","rids","i","length","split","push","residents_arr"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IACpB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,QAAN,CAAeC,IAApB,CADF,EAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAUF,KAAK,CAACC,QAAN,CAAeE,IAAzB,CAFE,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeH,KAAK,CAACC,QAAN,CAAeG,SAA9B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKIJ,KAAK,CAACK,SAAN,CAAgB,CAAhB,IAAqBL,KAAK,CAACK,SAAN,CAAgBC,GAAhB,CAAoBC,QAAQ,IAC/C;AAAI,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,kBAAX;AAA8B,EAAA,EAAE,EAAG,cAAaD,QAAQ,CAACC,EAAG,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,QAAQ,CAACL,IAAb,CADF,CADF,CADmB,CAArB,GAMI,6BAXR;AAAA;AAAA;AAAA,i/FADF;;AAwCAH,QAAQ,CAACU,eAAT,GAA2B,gBAAeC,OAAf,EAAwB;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAUD,OAAO,CAACE,KAAxB;AAEA,QAAMC,GAAG,GAAG,MAAMhB,KAAK,CAAE,4CAA2Cc,GAAI,EAAjD,CAAL,CAAyDG,IAAzD,CACfC,QAAD,IAAc;AACZ,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHe,CAAlB;AAKA,QAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAAG,CAACR,SAAJ,CAAcc,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAMX,QAAQ,GAAGM,GAAG,CAACR,SAAJ,CAAca,CAAd,EAAiBE,KAAjB,CAAuB,GAAvB,CAAjB;AACAH,IAAAA,IAAI,CAACI,IAAL,CAAUd,QAAQ,CAACA,QAAQ,CAACY,MAAT,GAAgB,CAAjB,CAAlB;AACD;;AAAA;AAED,MAAIG,aAAa,GAAG,MAAMzB,KAAK,CAAE,6CAA4CoB,IAAK,EAAnD,CAAL,CAA2DH,IAA3D,CACvBC,QAAD,IAAc;AACZ,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHuB,CAA1B;;AAIE,MAAIC,IAAI,CAACE,MAAL,IAAe,CAAnB,EAAsB;AACpBG,IAAAA,aAAa,GAAG,EAAhB;AACD;;AAEH,SAAO;AAAErB,IAAAA,QAAQ,EAAEY,GAAZ;AAAiBR,IAAAA,SAAS,EAAEiB;AAA5B,GAAP;AACD,CAvBD;;AAyBA,eAAevB,QAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Location = props => (\n  <Layout>\n    <h1>{props.location.name}</h1>\n<p>Type: {props.location.type}</p>\n    <p>Dimension: {props.location.dimension}</p>\n    <h2> Residents</h2>\n    { props.residents[0] ? props.residents.map(resident => (\n        <li key={resident.id}>\n          <Link href=\"/character/[cid]\" as={`/character/${resident.id}`}>\n            <a>{resident.name}</a>\n          </Link>\n        </li>\n      )): 'No residents in this planet'}\n       <style jsx>{`\n  h1,\n  a {\n    font-family: 'Arial';\n  }\n\n  ul {\n    padding: 0;\n  }\n\n  li {\n    list-style: none;\n    margin: 5px 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: blue;\n  }\n\n  a:hover {\n    opacity: 0.6;\n  }\n`}</style>\n  </Layout>\n);\n\nLocation.getInitialProps = async function(context) {\n  const { lid } = context.query;\n\n  const res = await fetch(`https://rickandmortyapi.com/api/location/${lid}`).then(\n    (response) => {\n      return response.json();\n    }\n  )\n  const rids = [];\n  for (let i = 0; i < res.residents.length; i++) {\n    const resident = res.residents[i].split('/');\n    rids.push(resident[resident.length-1]);\n  };\n  \n  let residents_arr = await fetch(`https://rickandmortyapi.com/api/character/${rids}`).then(\n    (response) => {\n      return response.json();\n    })\n    if (rids.length == 0) {\n      residents_arr = [];\n    }\n\n  return { location: res, residents: residents_arr };\n};\n\nexport default Location;"]},"metadata":{},"sourceType":"module"}