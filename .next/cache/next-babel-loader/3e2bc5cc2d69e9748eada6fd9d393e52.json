{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-158169765\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \"Rick and Morty Episodes\"), __jsx(\"ul\", {\n    className: \"jsx-158169765\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, props.episodes.map(function (episode) {\n    return __jsx(\"li\", {\n      key: episode.id,\n      className: \"jsx-158169765\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/episode/[eid]\",\n      as: \"/episode/\".concat(episode.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-158169765\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, episode.name)), __jsx(\"p\", {\n      className: \"jsx-158169765\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, \"Release Date: \", episode.air_date), __jsx(\"p\", {\n      className: \"jsx-158169765\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, \"Episdode Code: \", episode.episode));\n  })), __jsx(_JSXStyle, {\n    id: \"158169765\",\n    __self: _this\n  }, \"h1.jsx-158169765,a.jsx-158169765{font-family:'Arial';}ul.jsx-158169765{padding:0;}li.jsx-158169765{list-style:none;margin:5px 0;display:inline-block;white-space:nowrap;}a.jsx-158169765{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-158169765:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kaWVnby9Hb29nbGUgRHJpdmUvUFVDLzIwMjAvVGFsbGVyIGRlIEludGVncmFjaW9uL1RhcmVhL1QxL2ludGVncmF0aW9uMS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQmdCLEFBSXlCLEFBSVYsQUFJTSxBQVFLLEFBS1QsVUFoQmQsRUFpQkEsSUFiZSxJQVJmLFNBU3VCLHFCQUNGLEFBTVIsV0FDYixRQU5GIiwiZmlsZSI6Ii9Vc2Vycy9kaWVnby9Hb29nbGUgRHJpdmUvUFVDLzIwMjAvVGFsbGVyIGRlIEludGVncmFjaW9uL1RhcmVhL1QxL2ludGVncmF0aW9uMS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9NeUxheW91dCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbmNvbnN0IEluZGV4ID0gcHJvcHMgPT4gKFxuICA8TGF5b3V0PlxuICAgIDxoMT5SaWNrIGFuZCBNb3J0eSBFcGlzb2RlczwvaDE+XG4gICAgPHVsPlxuICAgICAge3Byb3BzLmVwaXNvZGVzLm1hcChlcGlzb2RlID0+IChcbiAgICAgICAgPGxpIGtleT17ZXBpc29kZS5pZH0+XG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9lcGlzb2RlL1tlaWRdXCIgYXM9e2AvZXBpc29kZS8ke2VwaXNvZGUuaWR9YH0+XG4gICAgICAgICAgICA8YT57ZXBpc29kZS5uYW1lfTwvYT5cbiAgICAgICAgICA8L0xpbms+XG4gICAgICA8cD5SZWxlYXNlIERhdGU6IHtlcGlzb2RlLmFpcl9kYXRlfTwvcD5cbiAgICAgIDxwPkVwaXNkb2RlIENvZGU6IHtlcGlzb2RlLmVwaXNvZGV9PC9wPlxuICAgICAgICA8L2xpPlxuICAgICAgKSl9XG4gICAgPC91bD5cbiAgICA8c3R5bGUganN4PntgXG4gIGgxLFxuICBhIHtcbiAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgfVxuXG4gIHVsIHtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5cbiAgbGkge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiA1cHggMDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbiAgfVxuXG4gIGEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogYmx1ZTtcbiAgfVxuXG4gIGE6aG92ZXIge1xuICAgIG9wYWNpdHk6IDAuNjtcbiAgfVxuYH08L3N0eWxlPlxuICA8L0xheW91dD5cbik7XG5cbkluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKCkge1xuIFxuIGNvbnN0IGVpZHMgPSBBcnJheS5mcm9tKEFycmF5KDMxKS5rZXlzKCkpO1xuICBjb25zdCBuZWlkcyA9IGVpZHMubWFwKGkgPT4ge1xuICAgICByZXR1cm4gaSsxO1xuICAgfSk7XG4gICBjb25zdCBlcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9yaWNrYW5kbW9ydHlhcGkuY29tL2FwaS9lcGlzb2RlLyR7bmVpZHN9YCkudGhlbihcbiAgICAgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICAgfVxuICAgKVxuICBcbiAgXG4gIHJldHVybiB7XG4gICAgZXBpc29kZXM6IGVyZXNwb25zZVxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXg7Il19 */\\n/*@ sourceURL=/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js */\"));\n};\n\nIndex.getInitialProps = function _callee() {\n  var eids, neids, eresponse;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          eids = Array.from(Array(31).keys());\n          neids = eids.map(function (i) {\n            return i + 1;\n          });\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"https://rickandmortyapi.com/api/episode/\".concat(neids)).then(function (response) {\n            return response.json();\n          }));\n\n        case 4:\n          eresponse = _context.sent;\n          return _context.abrupt(\"return\", {\n            episodes: eresponse\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js"],"names":["Layout","Link","fetch","Index","props","episodes","map","episode","id","name","air_date","getInitialProps","eids","Array","from","keys","neids","i","then","response","json","eresponse"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO;AAAA,WACzB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,gBAAX;AAA4B,MAAA,EAAE,qBAAcD,OAAO,CAACC,EAAtB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,OAAO,CAACE,IAAZ,CADF,CADF,EAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkBF,OAAO,CAACG,QAA1B,CAJE,EAKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmBH,OAAO,CAACA,OAA3B,CALE,CADyB;AAAA,GAA1B,CADH,CAFF;AAAA;AAAA;AAAA,okFADiB;AAAA,CAAnB;;AA4CAJ,KAAK,CAACQ,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjBC,UAAAA,IAFiB,GAEVC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,CAFU;AAGhBC,UAAAA,KAHgB,GAGRJ,IAAI,CAACN,GAAL,CAAS,UAAAW,CAAC,EAAI;AACzB,mBAAOA,CAAC,GAAC,CAAT;AACD,WAFY,CAHQ;AAAA;AAAA,2CAMGf,KAAK,mDAA4Cc,KAA5C,EAAL,CAA0DE,IAA1D,CACtB,UAACC,QAAD,EAAc;AACZ,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,WAHqB,CANH;;AAAA;AAMfC,UAAAA,SANe;AAAA,2CAaf;AACLhB,YAAAA,QAAQ,EAAEgB;AADL,WAbe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAkBA,eAAelB,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n  <Layout>\n    <h1>Rick and Morty Episodes</h1>\n    <ul>\n      {props.episodes.map(episode => (\n        <li key={episode.id}>\n          <Link href=\"/episode/[eid]\" as={`/episode/${episode.id}`}>\n            <a>{episode.name}</a>\n          </Link>\n      <p>Release Date: {episode.air_date}</p>\n      <p>Episdode Code: {episode.episode}</p>\n        </li>\n      ))}\n    </ul>\n    <style jsx>{`\n  h1,\n  a {\n    font-family: 'Arial';\n  }\n\n  ul {\n    padding: 0;\n  }\n\n  li {\n    list-style: none;\n    margin: 5px 0;\n    display: inline-block;\n    white-space: nowrap;\n}\n  }\n\n  a {\n    text-decoration: none;\n    color: blue;\n  }\n\n  a:hover {\n    opacity: 0.6;\n  }\n`}</style>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n \n const eids = Array.from(Array(31).keys());\n  const neids = eids.map(i => {\n     return i+1;\n   });\n   const eresponse = await fetch(`https://rickandmortyapi.com/api/episode/${neids}`).then(\n     (response) => {\n       return response.json();\n     }\n   )\n  \n  \n  return {\n    episodes: eresponse\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}