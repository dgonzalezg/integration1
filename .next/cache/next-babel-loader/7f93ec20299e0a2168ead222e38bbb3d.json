{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \"Rick and Morty Episodes\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, props.episodes.map(function (episode) {\n    return __jsx(\"li\", {\n      key: episode.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(episode.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, episode.name)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var eresponse, pages, arr, url, _eresponse;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://rickandmortyapi.com/api/episode').then(function (response) {\n            return response.json();\n          }));\n\n        case 2:\n          eresponse = _context.sent;\n          pages = parseInt(eresponse.info.pages);\n          arr = [];\n          url = 'https://rickandmortyapi.com/api/episode/';\n\n        case 6:\n          if (!true) {\n            _context.next = 19;\n            break;\n          }\n\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n            return response.json();\n          }));\n\n        case 9:\n          _eresponse = _context.sent;\n          arr.concat(_eresponse.result);\n          console.log(_eresponse.result);\n\n          if (!(_eresponse.info.next != '')) {\n            _context.next = 16;\n            break;\n          }\n\n          url = _eresponse.info.next;\n          _context.next = 17;\n          break;\n\n        case 16:\n          return _context.abrupt(\"break\", 19);\n\n        case 17:\n          _context.next = 6;\n          break;\n\n        case 19:\n          return _context.abrupt(\"return\", {\n            episodes: arr\n          });\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js"],"names":["Layout","Link","fetch","Index","props","episodes","map","episode","id","name","getInitialProps","then","response","json","eresponse","pages","parseInt","info","arr","url","concat","result","console","log","next"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO;AAAA,WACzB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,OAAO,CAACC,EAAhB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,OAAO,CAACE,IAAZ,CADF,CADF,CADyB;AAAA,GAA1B,CADH,CAFF,CADiB;AAAA,CAAnB;;AAeAN,KAAK,CAACO,eAAN,GAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEER,KAAK,CAAC,yCAAD,CAAL,CAAiDS,IAAjD,CACtB,UAACC,QAAD,EAAc;AACZ,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,WAHqB,CAFF;;AAAA;AAEhBC,UAAAA,SAFgB;AAQjBC,UAAAA,KARiB,GAQTC,QAAQ,CAACF,SAAS,CAACG,IAAV,CAAeF,KAAhB,CARC;AAUjBG,UAAAA,GAViB,GAUX,EAVW;AAWnBC,UAAAA,GAXmB,GAWb,0CAXa;;AAAA;AAAA,eAYf,IAZe;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAaIjB,KAAK,CAACiB,GAAD,CAAL,CAAWR,IAAX,CACxB,UAACC,QAAD,EAAc;AACZ,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,WAHuB,CAbJ;;AAAA;AAadC,UAAAA,UAbc;AAkBtBI,UAAAA,GAAG,CAACE,MAAJ,CAAWN,UAAS,CAACO,MAArB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYT,UAAS,CAACO,MAAtB;;AAnBsB,gBAoBlBP,UAAS,CAACG,IAAV,CAAeO,IAAf,IAAuB,EApBL;AAAA;AAAA;AAAA;;AAqBpBL,UAAAA,GAAG,GAAGL,UAAS,CAACG,IAAV,CAAeO,IAArB;AArBoB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,2CA6Bf;AACLnB,YAAAA,QAAQ,EAAEa;AADL,WA7Be;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAkCA,eAAef,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n  <Layout>\n    <h1>Rick and Morty Episodes</h1>\n    <ul>\n      {props.episodes.map(episode => (\n        <li key={episode.id}>\n          <Link href=\"/p/[id]\" as={`/p/${episode.id}`}>\n            <a>{episode.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n\n  const eresponse = await fetch('https://rickandmortyapi.com/api/episode').then(\n    (response) => {\n      return response.json();\n    }\n  );\n  \n const pages = parseInt(eresponse.info.pages);\n  \n const arr = []\n let url = 'https://rickandmortyapi.com/api/episode/';\n  while (true) {\n    const eresponse = await fetch(url).then(\n    (response) => {\n      return response.json();\n    }\n  );\n  arr.concat(eresponse.result)\n  console.log(eresponse.result);\n  if (eresponse.info.next != '') {\n    url = eresponse.info.next\n  }\n  else {\n    break\n  }\n  }\n  \n  \n  return {\n    episodes: arr\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}