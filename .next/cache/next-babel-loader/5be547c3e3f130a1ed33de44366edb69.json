{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \"Rick and Morty Episodes\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, props.episodes.map(function (episode) {\n    return __jsx(\"li\", {\n      key: episode.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(episode.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, episode.name)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var eresponse, pages, arr, i, ep;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://rickandmortyapi.com/api/episode').then(function (response) {\n            return response.json();\n          }));\n\n        case 2:\n          eresponse = _context.sent;\n          pages = parseInt(eresponse.info.pages);\n          console.log(pages);\n          arr = [];\n          i = 0;\n\n        case 7:\n          if (!(i < pages)) {\n            _context.next = 16;\n            break;\n          }\n\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(fetch(\"https://rickandmortyapi.com/api/episode/$page=\".concat(i + 1)).then(function (response) {\n            return response.json();\n          }));\n\n        case 10:\n          ep = _context.sent;\n          arr.concat(ep.results);\n          console.log(ep);\n\n        case 13:\n          i++;\n          _context.next = 7;\n          break;\n\n        case 16:\n          return _context.abrupt(\"return\", {\n            episodes: arr\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/diego/Google Drive/PUC/2020/Taller de Integracion/Tarea/T1/integration1/pages/index.js"],"names":["Layout","Link","fetch","Index","props","episodes","map","episode","id","name","getInitialProps","then","response","json","eresponse","pages","parseInt","info","console","log","arr","i","ep","concat","results"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO;AAAA,WACzB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,OAAO,CAACC,EAAhB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,OAAO,CAACE,IAAZ,CADF,CADF,CADyB;AAAA,GAA1B,CADH,CAFF,CADiB;AAAA,CAAnB;;AAeAN,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEER,KAAK,CAAC,yCAAD,CAAL,CAAiDS,IAAjD,CACtB,UAACC,QAAD,EAAc;AACZ,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,WAHqB,CAFF;;AAAA;AAEhBC,UAAAA,SAFgB;AAQhBC,UAAAA,KARgB,GAQRC,QAAQ,CAACF,SAAS,CAACG,IAAV,CAAeF,KAAhB,CARA;AAStBG,UAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACMK,UAAAA,GAVgB,GAUV,EAVU;AAWbC,UAAAA,CAXa,GAWT,CAXS;;AAAA;AAAA,gBAWNA,CAAC,GAAGN,KAXE;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAYHb,KAAK,yDAAkDmB,CAAC,GAAC,CAApD,EAAL,CAA8DV,IAA9D,CACf,UAACC,QAAD,EAAc;AACZ,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,WAHc,CAZG;;AAAA;AAYdS,UAAAA,EAZc;AAiBpBF,UAAAA,GAAG,CAACG,MAAJ,CAAWD,EAAE,CAACE,OAAd;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;;AAlBoB;AAWKD,UAAAA,CAAC,EAXN;AAAA;AAAA;;AAAA;AAAA,2CAsBf;AACLhB,YAAAA,QAAQ,EAAEe;AADL,WAtBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AA2BA,eAAejB,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n  <Layout>\n    <h1>Rick and Morty Episodes</h1>\n    <ul>\n      {props.episodes.map(episode => (\n        <li key={episode.id}>\n          <Link href=\"/p/[id]\" as={`/p/${episode.id}`}>\n            <a>{episode.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n\n  const eresponse = await fetch('https://rickandmortyapi.com/api/episode').then(\n    (response) => {\n      return response.json();\n    }\n  );\n  \n  const pages = parseInt(eresponse.info.pages);\n  console.log(pages);\n  const arr = []\n  for (let i = 0; i < pages; i++) {\n    const ep = await fetch(`https://rickandmortyapi.com/api/episode/$page=${i+1}`).then(\n      (response) => {\n        return response.json();\n      }\n    )\n    arr.concat(ep.results)\n    console.log(ep)\n  }\n  //console.log(arr);\n  \n  return {\n    episodes: arr\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}